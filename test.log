
####
#### Compilation
####
mkdir -p obj
gcc -o obj/fonctionsMatricesHash.o -c src/fonctionsMatricesHash.c -O3 -pipe -march=native -mtune=native -Wall -Wextra -Werror -g  -I./include
mkdir -p obj
gcc -o obj/readFunctions.o -c src/readFunctions.c -O3 -pipe -march=native -mtune=native -Wall -Wextra -Werror -g  -I./include
mkdir -p obj
gcc -o obj/argsParser.o -c src/argsParser.c -O3 -pipe -march=native -mtune=native -Wall -Wextra -Werror -g  -I./include
mkdir -p obj
gcc -o obj/io-utils.o -c src/io-utils.c -O3 -pipe -march=native -mtune=native -Wall -Wextra -Werror -g  -I./include
mkdir -p obj
gcc -o obj/searchingFunctions.o -c src/searchingFunctions.c -O3 -pipe -march=native -mtune=native -Wall -Wextra -Werror -g  -I./include
mkdir -p obj
gcc -o obj/program.o -c src/program.c -O3 -pipe -march=native -mtune=native -Wall -Wextra -Werror -g  -I./include
mkdir -p obj
gcc -o obj/baseParser.o -c src/baseParser.c -O3 -pipe -march=native -mtune=native -Wall -Wextra -Werror -g  -I./include
mkdir -p obj
gcc -o obj/fonctionsMatrice.o -c src/fonctionsMatrice.c -O3 -pipe -march=native -mtune=native -Wall -Wextra -Werror -g  -I./include
mkdir -p bin
gcc -o bin/program obj/fonctionsMatricesHash.o obj/readFunctions.o obj/argsParser.o obj/io-utils.o obj/searchingFunctions.o obj/program.o obj/baseParser.o obj/fonctionsMatrice.o -O3 -pipe -march=native -mtune=native -Wall -Wextra -Werror -g  
Linking complete!

####
#### Erreur pas d'arguments
####
Action is missing !

usage: ./bin/program OPTIONS
options:
	-i FICHIER               indicate the xml to read
	-o FICHIER               indicate the binary to write
	-x                       generate the binary file from the xml database
	-r                       read and print the binary structure for each document
	-m                       make the adjacence list from the binary file
	-a AUTHOR                show all the titles of the document where the author has participated
	-l WORD                  show all the authors containing WORD in their name
	-p AUTHOR1 -p AUTHOR2    return the shortest way between these authors
	-p AUTHOR1 -p AUTHOR2 -d return the shortest distance between these authors
	-a AUTHOR -n N           show all the authors at the distance N of the author given
	-h                       show this help


Examples:
./bin/program -i database/dblp.xml -o database/dblp.bin -a "Quentin Bramas"

####
#### Execution parsing base sample
####
[0;32mDatabase parsing ok ! [0m

####
#### Execution parse base sample1ref et affichage structure
####
===DIFF===

####
#### Erreur entr√©e non XML
####
Action is missing !

usage: ./bin/program OPTIONS
options:
	-i FICHIER               indicate the xml to read
	-o FICHIER               indicate the binary to write
	-x                       generate the binary file from the xml database
	-r                       read and print the binary structure for each document
	-m                       make the adjacence list from the binary file
	-a AUTHOR                show all the titles of the document where the author has participated
	-l WORD                  show all the authors containing WORD in their name
	-p AUTHOR1 -p AUTHOR2    return the shortest way between these authors
	-p AUTHOR1 -p AUTHOR2 -d return the shortest distance between these authors
	-a AUTHOR -n N           show all the authors at the distance N of the author given
	-h                       show this help


Examples:
./bin/program -i database/dblp.xml -o database/dblp.bin -a "Quentin Bramas"

####
#### Execution graphe sample
####

*************************************Debut de la fonction graphe*************************************

[?25l[[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m][?25h

**************************************Fin de la fonction graphe**************************************



*********************************Lib√©ration de l'espace**************************************


####
#### Execution recherche articles (et auteurs)
####

*************************************Debut de la fonction graphe*************************************

[?25l[[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m[0;35m#[0m][?25h

**************************************Fin de la fonction graphe**************************************

Searching...

Authors containing "Russell Turpin" in their name : 
 - (null)



Articles of Russell Turpin : 
 - Programming Data Structures in Logic.


[0;32mComplete ! [0m


*********************************Lib√©ration de l'espace**************************************


####
#### Execution tests.c + cov
####
rm -f obj/*.o
rm -f obj/*.gcda
rm -f obj/*.gcno
rm -f /tests
rm -rf rapport/
rm -f rapport.info
mkdir -p obj
gcc -o obj/fonctionsMatricesHash.o -c ../src/fonctionsMatricesHash.c -O3 -pipe -march=native -mtune=native -Wall -Wextra -Werror -g -fprofile-arcs -ftest-coverage -I../include
mkdir -p obj
gcc -o obj/readFunctions.o -c ../src/readFunctions.c -O3 -pipe -march=native -mtune=native -Wall -Wextra -Werror -g -fprofile-arcs -ftest-coverage -I../include
mkdir -p obj
gcc -o obj/argsParser.o -c ../src/argsParser.c -O3 -pipe -march=native -mtune=native -Wall -Wextra -Werror -g -fprofile-arcs -ftest-coverage -I../include
mkdir -p obj
gcc -o obj/io-utils.o -c ../src/io-utils.c -O3 -pipe -march=native -mtune=native -Wall -Wextra -Werror -g -fprofile-arcs -ftest-coverage -I../include
mkdir -p obj
gcc -o obj/searchingFunctions.o -c ../src/searchingFunctions.c -O3 -pipe -march=native -mtune=native -Wall -Wextra -Werror -g -fprofile-arcs -ftest-coverage -I../include
mkdir -p obj
gcc -o obj/baseParser.o -c ../src/baseParser.c -O3 -pipe -march=native -mtune=native -Wall -Wextra -Werror -g -fprofile-arcs -ftest-coverage -I../include
mkdir -p obj
gcc -o obj/fonctionsMatrice.o -c ../src/fonctionsMatrice.c -O3 -pipe -march=native -mtune=native -Wall -Wextra -Werror -g -fprofile-arcs -ftest-coverage -I../include
gcc -o obj/tests.o -c tests.c -O3 -pipe -march=native -mtune=native -Wall -Wextra -Werror -g -fprofile-arcs -ftest-coverage -I../include
gcc -o tests obj/fonctionsMatricesHash.o obj/readFunctions.o obj/argsParser.o obj/io-utils.o obj/searchingFunctions.o obj/baseParser.o obj/fonctionsMatrice.o obj/tests.o -O3 -pipe -march=native -mtune=native -Wall -Wextra -Werror -g -fprofile-arcs -ftest-coverage -lm
Linking complete!
valgrind --leak-check=full -q ./tests
lcov -d obj -c -o rapport.info
Capturing coverage data from obj
Found gcov version: 9.3.0
Using intermediate gcov format
Scanning obj for .gcda files ...
Found 8 data files in obj
Processing obj/searchingFunctions.gcda
Processing obj/fonctionsMatricesHash.gcda
Processing obj/baseParser.gcda
Processing obj/argsParser.gcda
Processing obj/io-utils.gcda
Processing obj/fonctionsMatrice.gcda
Processing obj/readFunctions.gcda
Processing obj/tests.gcda
Finished .info-file creation
genhtml -o rapport -t "Couverture" rapport.info
Reading data file rapport.info
Found 10 entries.
Found common filename prefix "/home/felixlusseau/Documents/Cours/ProjetProgrammation2021"
Writing .css and .png files.
Generating output.
Processing file src/fonctionsMatrice.c
Processing file src/io-utils.c
Processing file src/baseParser.c
Processing file src/fonctionsMatricesHash.c
Processing file src/searchingFunctions.c
Processing file src/readFunctions.c
Processing file src/argsParser.c
Processing file tests/tests.c
Processing file /usr/include/stdlib.h
Processing file /usr/include/x86_64-linux-gnu/bits/stdio2.h
Writing directory view page.
Overall coverage rate:
  lines......: 9.1% (82 of 898 lines)
  functions..: 13.3% (8 of 60 functions)
